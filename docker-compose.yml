services:
  server:
    build:
      context: backend
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - mongo
      - init-thingsboard
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB_NAME=siqa_database
      - SECRET_KEY=${SERVER_SECRET_KEY}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - INITIAL_ADMIN_NAME=${INITIAL_ADMIN_NAME}
      - INITIAL_ADMIN_GOOGLE_EMAIL=${INITIAL_ADMIN_GOOGLE_EMAIL}
    volumes:
      - ./backend:/app
      - shared-data:/shared

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    depends_on:
     - server
    deploy:
      mode: replicated
      replicas: 3

  mongo:
    image: mongo:8.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server

  kafka:
    restart: always
    image: bitnami/kafka:3.8.1
    ports:
      - 9092:9092 #to localhost:9092 from host machine
      - 9093 #for Kraft
      - 9094 #to kafka:9094 from within Docker network
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "OUTSIDE://:9092,CONTROLLER://:9093,INSIDE://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "OUTSIDE://localhost:9092,INSIDE://kafka:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INSIDE"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker" #KRaft
      KAFKA_CFG_NODE_ID: "0" #KRaft
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER" #KRaft
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093" #KRaft
    volumes:
      - kafka-data:/bitnami

  mytb:
    restart: always
    image: "thingsboard/tb-postgres"
    depends_on:
      - kafka
    ports:
      - "8080:9090"
      - "1883:1883"
      - "7070:7070"
      - "5683-5688:5683-5688/udp"
    environment:
      TB_QUEUE_TYPE: kafka
      TB_KAFKA_SERVERS: kafka:9094
    volumes:
      - mytb-data:/data
      - mytb-logs:/var/log/thingsboard

  init-thingsboard:
    build:
      context: things_board
      dockerfile: Dockerfile
    depends_on:
      - mytb
    volumes:
      - shared-data:/shared

  emulator:
    build:
      context: sensor-emulator
      dockerfile: Dockerfile
    depends_on:
      - init-thingsboard

volumes:
  shared-data:
  mongo_data:
  mytb-data:
  mytb-logs:
  kafka-data:
    driver: local